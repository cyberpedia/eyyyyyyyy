name: CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ "*" ]

jobs:
  backend:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r backend/requirements.txt

      - name: Django checks and tests
        working-directory: backend
        env:
          DJANGO_DEBUG: "1"
        run: |
          python manage.py check
          python manage.py migrate --noinput
          python manage.py test -v 2

  frontend:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    env:
      NEXT_TELEMETRY_DISABLED: "1"
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: "18"

      - name: Cache npm
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: npm-${{ runner.os }}-${{ hashFiles('frontend/package.json') }}
          restore-keys: |
            npm-${{ runner.os }}-

      - name: Cache node_modules
        uses: actions/cache@v3
        with:
          path: frontend/node_modules
          key: node-modules-${{ runner.os }}-${{ hashFiles('frontend/package.json') }}
          restore-keys: |
            node-modules-${{ runner.os }}-

      - name: Cache Next.js build cache
        uses: actions/cache@v3
        with:
          path: frontend/.next/cache
          key: nextjs-${{ runner.os }}-${{ hashFiles('frontend/package.json') }}
          restore-keys: |
            nextjs-${{ runner.os }}-

      - name: Install dependencies
        working-directory: frontend
        run: |
          npm install

      - name: Generate audit report
        working-directory: frontend
        run: |
          npm audit --json > audit-report.json || true

      - name: Fail on high/critical vulnerabilities
        working-directory: frontend
        run: |
          node -e "const fs=require('fs'); const j=JSON.parse(fs.readFileSync('audit-report.json','utf8')); const meta=(j && j.metadata && j.metadata.vulnerabilities)||{}; const high=meta.high||0; const critical=meta.critical||0; if(high>0||critical>0){ console.error(`High: ${high}, Critical: ${critical}`); process.exit(1);} else { console.log(`No high/critical vulnerabilities. High: ${high}, Critical: ${critical}`); }"

      - name: Run tests
        working-directory: frontend
        run: |
          npm test

      - name: Build
        working-directory: frontend
        run: |
          npm run build

      - name: Upload audit report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: frontend-audit-report
          path: frontend/audit-report.json