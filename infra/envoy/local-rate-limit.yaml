# Example Envoy local rate limit configuration for the CTF backend.
# This is a reference; adapt to your deployment (clusters, ports, TLS, etc.)

static_resources:
  clusters:
    - name: django
      type: logical_dns
      connect_timeout: 1s
      lb_policy: round_robin
      load_assignment:
        cluster_name: django
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: backend
                      port_value: 8000

  listeners:
    - name: listener_http
      address:
        socket_address: { address: 0.0.0.0, port_value: 8080 }
      filter_chains:
        - filters:
            - name: envoy.filters.network.http_connection_manager
              typed_config:
                "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
                stat_prefix: ingress_http
                route_config:
                  name: local_route
                  virtual_hosts:
                    - name: backend
                      domains: ["*"]
                      routes:
                        - match: { prefix: "/api/auth/login" }
                          typed_per_filter_config:
                            envoy.filters.http.local_ratelimit:
                              "@type": type.googleapis.com/envoy.extensions.filters.http.local_ratelimit.v3.LocalRateLimit
                              stat_prefix: login_ratelimit
                              token_bucket: { max_tokens: 5, tokens_per_fill: 5, fill_interval: 60s }
                          route:
                            cluster: django
                        - match: { prefix: "/api/challenges/" }
                          typed_per_filter_config:
                            envoy.filters.http.local_ratelimit:
                              "@type": type.googleapis.com/envoy.extensions.filters.http.local_ratelimit.v3.LocalRateLimit
                              stat_prefix: submit_ratelimit
                              token_bucket: { max_tokens: 10, tokens_per_fill: 10, fill_interval: 60s }
                          route:
                            cluster: django
                http_filters:
                  - name: envoy.filters.http.local_ratelimit
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.filters.http.local_ratelimit.v3.LocalRateLimit
                      stat_prefix: global_ratelimit
                      token_bucket: { max_tokens: 20, tokens_per_fill: 20, fill_interval: 1s }
                  - name: envoy.filters.http.router